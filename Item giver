--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v87=v5(v82,v19);v19=nil;return v87;else return v82;end end end);local function v20(v31,v32,v33)if v33 then local v83=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v83-(v83%(569 -(367 + 201))) ;else local v84=(929 -(214 + 713))^(v32-(1 + (1637 -(1523 + 114)))) ;return (((v31%(v84 + v84))>=v84) and (1 + 0)) or ((789 + 88) -(282 + 595)) ;end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35,v36=v1(v16,v18,v18 + (2 -0) );v18=v18 + (1067 -(68 + 997)) ;return (v36 * (1526 -(226 + 1044))) + v35 ;end local function v23()local v37=0 -0 ;local v38;local v39;local v40;local v41;while true do if (v37==(118 -(32 + (435 -(87 + 263))))) then return (v41 * (16777396 -(67 + 113))) + (v40 * (64226 + 1310)) + (v39 * (57 + 199)) + v38 ;end if (v37==(957 -(892 + 65))) then v38,v39,v40,v41=v1(v16,v18,v18 + (7 -4) );v18=v18 + (6 -2) ;v37=1 -0 ;end end end local function v24()local v42=v23();local v43=v23();local v44=1 + 0 ;local v45=(v20(v43,2 -(3 -2) ,20) * ((2 + 0)^(127 -95))) + v42 ;local v46=v20(v43,973 -(802 + 150) ,83 -52 );local v47=((v20(v43,57 -25 )==(1 + (18 -(10 + 8)))) and  -(998 -(915 + 82))) or (3 -2) ;if (v46==(0 -0)) then if (v45==(0 + 0)) then return v47 * (0 -(442 -(416 + 26))) ;else v46=1188 -(1069 + 118) ;v44=0;end elseif (v46==2047) then return ((v45==(0 -0)) and (v47 * ((1 -0)/(0 + (0 -0))))) or (v47 * NaN) ;end return v8(v47,v46-((780 + 1037) -794) ) * (v44 + (v45/((2 + 0)^(843 -(368 + 423))))) ;end local function v25(v48)local v49;if  not v48 then v48=v23();if (v48==0) then return "";end end v49=v3(v16,v18,(v18 + v48) -(1 -0) );v18=v18 + v48 ;local v50={};for v66=439 -(145 + 293) , #v49 do v50[v66]=v2(v1(v3(v49,v66,v66)));end return v6(v50);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v51==(3 -2)) then v54=nil;v55=nil;v51=869 -(550 + 317) ;end if (v51~=2) then else v56=nil;v57=nil;v51=3 -0 ;end if (v51~=0) then else v52=0;v53=nil;v51=1 -0 ;end if (v51==4) then while true do if (v52==1) then v55=nil;v56=nil;v52=2;end if (v52==0) then local v94=0 -0 ;while true do if (1~=v94) then else v52=286 -(134 + 151) ;break;end if (v94==(1665 -(970 + 695))) then v53=0;v54=nil;v94=1 -0 ;end end end if (v52==(1992 -(582 + 1408))) then v57=nil;v58=nil;v52=10 -7 ;end if (3~=v52) then else v59=nil;while true do local v95=0 -0 ;local v96;while true do if (v95==0) then v96=0;while true do if (v96==(0 -0)) then local v97=0;while true do if (v97~=(1824 -(1195 + 629))) then else if (v53~=(2 -0)) then else local v174=0;while true do if (v174~=0) then else for v194=242 -(187 + 54) ,v58 do local v195=0;local v196;local v197;local v198;local v199;while true do if (v195~=(780 -(162 + 618))) then else v196=0 + 0 ;v197=nil;v195=1;end if (v195==2) then while true do if (v196==(0 + 0)) then local v209=0 -0 ;while true do if (0==v209) then v197=0;v198=nil;v209=1;end if (v209~=(1 -0)) then else v196=1 + 0 ;break;end end end if (v196==1) then v199=nil;while true do if (v197==0) then local v215=0;while true do if (v215~=0) then else v198=v21();v199=nil;v215=1637 -(1373 + 263) ;end if (v215~=1) then else v197=1001 -(451 + 549) ;break;end end end if (v197~=(1 + 0)) then else if (v198==1) then v199=v21()~=0 ;elseif (v198==2) then v199=v24();elseif (v198==3) then v199=v25();end v59[v194]=v199;break;end end break;end end break;end if (v195==(1 -0)) then v198=nil;v199=nil;v195=2;end end end v57[3]=v21();v174=1 -0 ;end if (v174~=1) then else for v200=1,v23() do local v201=0;local v202;local v203;while true do if (v201~=(1384 -(746 + 638))) then else local v208=0 + 0 ;while true do if (v208~=1) then else v201=1 -0 ;break;end if (v208==(341 -(218 + 123))) then v202=1581 -(1535 + 46) ;v203=nil;v208=1;end end end if (1==v201) then while true do if (v202==(0 + 0)) then v203=v21();if (v20(v203,1 + 0 ,1)==(560 -(306 + 254))) then local v210=0 + 0 ;local v211;local v212;local v213;local v214;while true do if (v210==0) then v211=0;v212=nil;v210=1;end if (v210==2) then while true do if (v211~=0) then else local v217=0 -0 ;while true do if ((1468 -(899 + 568))~=v217) then else v211=1 + 0 ;break;end if (v217==(0 -0)) then local v226=603 -(268 + 335) ;while true do if (v226==1) then v217=291 -(60 + 230) ;break;end if (v226==0) then v212=v20(v203,2,575 -(426 + 146) );v213=v20(v203,4,1 + 5 );v226=1457 -(282 + 1174) ;end end end end end if (v211==(813 -(569 + 242))) then if (v20(v213,2 -1 ,1 + 0 )~=(1025 -(706 + 318))) then else v214[2]=v59[v214[1253 -(721 + 530) ]];end if (v20(v213,1273 -(945 + 326) ,2)==(2 -1)) then v214[3 + 0 ]=v59[v214[3]];end v211=703 -(271 + 429) ;end if (v211==(1 + 0)) then local v218=1500 -(1408 + 92) ;while true do if (v218==0) then local v227=1086 -(461 + 625) ;while true do if (v227~=0) then else v214={v22(),v22(),nil,nil};if (v212==(0 + 0)) then local v228=1171 -(418 + 753) ;local v229;while true do if (v228~=0) then else v229=0 + 0 ;while true do if (0==v229) then v214[1 + 2 ]=v22();v214[2 + 2 ]=v22();break;end end break;end end elseif (v212==1) then v214[1 + 2 ]=v23();elseif (v212==(531 -(406 + 123))) then v214[1772 -(1749 + 20) ]=v23() -((1 + 1)^(1338 -(1249 + 73))) ;elseif (v212~=(2 + 1)) then else local v234=1145 -(466 + 679) ;local v235;local v236;local v237;while true do if (v234~=(0 -0)) then else v235=0;v236=nil;v234=1;end if (v234~=1) then else v237=nil;while true do if (v235==1) then while true do if (v236~=0) then else v237=0;while true do if (v237==0) then v214[3]=v23() -(2^(45 -29)) ;v214[1904 -(106 + 1794) ]=v22();break;end end break;end end break;end if (0~=v235) then else v236=0;v237=nil;v235=1;end end break;end end end v227=1;end if (v227==(1 + 0)) then v218=1 + 0 ;break;end end end if (v218==1) then v211=2;break;end end end if (v211==3) then if (v20(v213,8 -5 ,3)~=(2 -1)) then else v214[4]=v59[v214[118 -(4 + 110) ]];end v54[v200]=v214;break;end end break;end if (v210~=1) then else v213=nil;v214=nil;v210=586 -(57 + 527) ;end end end break;end end break;end end end v53=1430 -(41 + 1386) ;break;end end end if (v53==(106 -(17 + 86))) then local v175=0 + 0 ;while true do if (v175==0) then for v204=1 -0 ,v23() do v55[v204-1 ]=v28();end return v57;end end end v97=1;end if (v97==(2 -1)) then v96=167 -(122 + 44) ;break;end end end if ((1 -0)~=v96) then else if (v53~=(3 -2)) then else local v98=0;while true do if (v98~=(0 + 0)) then else local v176=0 + 0 ;while true do if (0==v176) then v57={v54,v55,nil,v56};v58=v23();v176=1;end if ((66 -(30 + 35))==v176) then v98=1;break;end end end if (v98~=(1 + 0)) then else v59={};v53=1259 -(1043 + 214) ;break;end end end if (v53~=0) then else local v99=0 -0 ;local v100;while true do if (v99==0) then v100=0;while true do if (v100~=(1213 -(323 + 889))) then else v56={};v53=2 -1 ;break;end if ((580 -(361 + 219))~=v100) then else local v191=0;while true do if (v191~=(320 -(53 + 267))) then else v54={};v55={};v191=1;end if (v191==(1 + 0)) then v100=414 -(15 + 398) ;break;end end end end break;end end end break;end end break;end end end break;end end break;end if (v51~=(985 -(18 + 964))) then else v58=nil;v59=nil;v51=14 -10 ;end end end local function v29(v60,v61,v62)local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...)local v68=v63;local v69=v64;local v70=v65;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v85=0,v76 do if (v85>=v70) then v74[v85-v70 ]=v75[v85 + 1 ];else v78[v85]=v75[v85 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do local v86=0;while true do if (v86==0) then v80=v68[v72];v81=v80[1];v86=1;end if (v86==1) then if (v81<=21) then if (v81<=10) then if (v81<=4) then if (v81<=1) then if (v81>0) then local v101=v80[2];v78[v101](v78[v101 + 1 ]);else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81<=2) then local v104=v80[2];v78[v104]=v78[v104](v13(v78,v104 + 1 ,v80[3]));elseif (v81==3) then v78[v80[2]]();else v78[v80[2]]={};end elseif (v81<=7) then if (v81<=5) then v78[v80[2]]=v80[3]~=0 ;elseif (v81>6) then v72=v80[3];else for v177=v80[2],v80[3] do v78[v177]=nil;end end elseif (v81<=8) then v78[v80[2]][v80[3]]=v78[v80[4]];elseif (v81>9) then v78[v80[2]]=v80[3];else v78[v80[2]]=v80[3]~=0 ;end elseif (v81<=15) then if (v81<=12) then if (v81>11) then v78[v80[2]]=v78[v80[3]][v80[4]];else local v111=v80[2];v78[v111]=v78[v111]();end elseif (v81<=13) then v78[v80[2]]=v78[v80[3]];elseif (v81==14) then local v139=v80[2];v78[v139]=v78[v139]();else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=18) then if (v81<=16) then local v115=v80[2];local v116=v78[v80[3]];v78[v115 + 1 ]=v116;v78[v115]=v116[v80[4]];elseif (v81>17) then do return;end else v78[v80[2]][v80[3]]=v80[4];end elseif (v81<=19) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==20) then v78[v80[2]]={};else v78[v80[2]][v80[3]]=v80[4];end elseif (v81<=32) then if (v81<=26) then if (v81<=23) then if (v81>22) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else do return;end end elseif (v81<=24) then local v120=0;local v121;while true do if (v120==0) then v121=v80[2];v78[v121](v13(v78,v121 + 1 ,v80[3]));break;end end elseif (v81==25) then local v150=v80[2];local v151,v152=v71(v78[v150](v13(v78,v150 + 1 ,v80[3])));v73=(v152 + v150) -1 ;local v153=0;for v180=v150,v73 do local v181=0;while true do if (v181==0) then v153=v153 + 1 ;v78[v180]=v151[v153];break;end end end else v78[v80[2]]=v80[3];end elseif (v81<=29) then if (v81<=27) then v78[v80[2]]=v29(v69[v80[3]],nil,v62);elseif (v81==28) then local v156=0;local v157;while true do if (v156==0) then v157=v80[2];v78[v157](v78[v157 + 1 ]);break;end end else local v158=v80[2];local v159=v78[v80[3]];v78[v158 + 1 ]=v159;v78[v158]=v159[v80[4]];end elseif (v81<=30) then local v123=v80[2];v78[v123]=v78[v123](v13(v78,v123 + 1 ,v80[3]));elseif (v81==31) then for v182=v80[2],v80[3] do v78[v182]=nil;end else v78[v80[2]]=v29(v69[v80[3]],nil,v62);end elseif (v81<=37) then if (v81<=34) then if (v81>33) then local v125=0;local v126;local v127;local v128;local v129;while true do if (2==v125) then for v185=v126,v73 do local v186=0;while true do if (v186==0) then v129=v129 + 1 ;v78[v185]=v127[v129];break;end end end break;end if (v125==0) then v126=v80[2];v127,v128=v71(v78[v126](v13(v78,v126 + 1 ,v80[3])));v125=1;end if (v125==1) then v73=(v128 + v126) -1 ;v129=0;v125=2;end end else v78[v80[2]]();end elseif (v81<=35) then v78[v80[2]]=v62[v80[3]];elseif (v81>36) then local v164=0;local v165;while true do if (0==v164) then v165=v80[2];v78[v165](v13(v78,v165 + 1 ,v80[3]));break;end end else v78[v80[2]]=v78[v80[3]];end elseif (v81<=40) then if (v81<=38) then v78[v80[2]]=v62[v80[3]];elseif (v81==39) then local v168=v80[2];v78[v168]=v78[v168](v13(v78,v168 + 1 ,v73));else local v170=v80[2];v78[v170]=v78[v170](v13(v78,v170 + 1 ,v73));end elseif (v81<=41) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==42) then v72=v80[3];elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end v72=v72 + 1 ;break;end end end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
